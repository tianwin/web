<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'mautic.campaign.model.event' shared service.

$this->services['mautic.campaign.model.event'] = $instance = new \Mautic\CampaignBundle\Model\EventModel(($this->services['mautic.user.model.user'] ?? $this->getMautic_User_Model_UserService()), ($this->services['mautic.core.model.notification'] ?? $this->getMautic_Core_Model_NotificationService()), ($this->services['mautic.campaign.model.campaign'] ?? $this->load('getMautic_Campaign_Model_CampaignService.php')), ($this->services['mautic.lead.model.lead'] ?? $this->getMautic_Lead_Model_LeadService()), ($this->services['mautic.helper.ip_lookup'] ?? $this->getMautic_Helper_IpLookupService()), ($this->services['mautic.campaign.executioner.realtime'] ?? $this->load('getMautic_Campaign_Executioner_RealtimeService.php')), ($this->services['mautic.campaign.executioner.kickoff'] ?? $this->load('getMautic_Campaign_Executioner_KickoffService.php')), ($this->services['mautic.campaign.executioner.scheduled'] ?? $this->load('getMautic_Campaign_Executioner_ScheduledService.php')), ($this->services['mautic.campaign.executioner.inactive'] ?? $this->load('getMautic_Campaign_Executioner_InactiveService.php')), ($this->services['mautic.campaign.event_executioner'] ?? $this->load('getMautic_Campaign_EventExecutionerService.php')), ($this->services['mautic.campaign.event_collector'] ?? $this->load('getMautic_Campaign_EventCollectorService.php')), ($this->services['mautic.campaign.dispatcher.action'] ?? $this->load('getMautic_Campaign_Dispatcher_ActionService.php')), ($this->services['mautic.campaign.dispatcher.condition'] ?? $this->load('getMautic_Campaign_Dispatcher_ConditionService.php')), ($this->services['mautic.campaign.dispatcher.decision'] ?? $this->load('getMautic_Campaign_Dispatcher_DecisionService.php')), ($this->services['mautic.campaign.repository.lead_event_log'] ?? $this->load('getMautic_Campaign_Repository_LeadEventLogService.php')));

$instance->setEntityManager(($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService()));
$instance->setSecurity(($this->services['mautic.security'] ?? $this->getMautic_SecurityService()));
$instance->setDispatcher(($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));
$instance->setTranslator(($this->services['translator.default'] ?? $this->getTranslator_DefaultService()));
$instance->setUserHelper(($this->services['mautic.helper.user'] ?? $this->getMautic_Helper_UserService()));
$instance->setCoreParametersHelper(($this->services['mautic.helper.core_parameters'] ?? ($this->services['mautic.helper.core_parameters'] = new \Mautic\CoreBundle\Helper\CoreParametersHelper($this))));
$instance->setRouter(($this->services['router'] ?? $this->getRouterService()));
$instance->setLogger(($this->services['monolog.logger.mautic'] ?? $this->getMonolog_Logger_MauticService()));

return $instance;
