<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'lightsaml.container.build' shared service.

$a = ($this->services['session'] ?? $this->getSessionService());
$b = ($this->privates['lightsaml.system.time_provider'] ?? ($this->privates['lightsaml.system.time_provider'] = new \LightSaml\Provider\TimeProvider\SystemTimeProvider()));
$c = new \Symfony\Component\EventDispatcher\EventDispatcher();
$d = new \LightSaml\Store\TrustOptions\CompositeTrustOptionsStore();
$d->add(($this->services['mautic.security.saml.trust_store'] ?? $this->load('getMautic_Security_Saml_TrustStoreService.php')));
$e = new \LightSaml\Store\Sso\SsoStateSessionStore($a, 'samlsso');
$f = new \LightSaml\Validator\Model\NameId\NameIdValidator();
$g = $this->load('getLightsaml_Service_CredentialResolverService.php');
$h = new \LightSaml\Resolver\Endpoint\CompositeEndpointResolver();
$h->add(new \LightSaml\Resolver\Endpoint\BindingEndpointResolver());
$h->add(new \LightSaml\Resolver\Endpoint\DescriptorTypeEndpointResolver());
$h->add(new \LightSaml\Resolver\Endpoint\ServiceTypeEndpointResolver());
$h->add(new \LightSaml\Resolver\Endpoint\IndexEndpointResolver());
$h->add(new \LightSaml\Resolver\Endpoint\LocationEndpointResolver());
$i = ($this->privates['lightsaml.own.credential_store'] ?? $this->load('getLightsaml_Own_CredentialStoreService.php'));

return $this->services['lightsaml.container.build'] = new \LightSaml\SymfonyBridgeBundle\Bridge\Container\BuildContainer(new \LightSaml\SymfonyBridgeBundle\Bridge\Container\SystemContainer(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a, $b, $c, new \Psr\Log\NullLogger()), new \LightSaml\SymfonyBridgeBundle\Bridge\Container\PartyContainer(($this->privates['lightsaml.party.idp_entity_descriptor_store'] ?? $this->load('getLightsaml_Party_IdpEntityDescriptorStoreService.php')), ($this->privates['lightsaml.party.sp_entity_descriptor_store'] ?? ($this->privates['lightsaml.party.sp_entity_descriptor_store'] = new \LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore())), $d), new \LightSaml\SymfonyBridgeBundle\Bridge\Container\StoreContainer(new \LightSaml\Store\Request\RequestStateSessionStore($a, 'main', 'saml_request_state_'), ($this->services['mautic.security.saml.id_store'] ?? $this->load('getMautic_Security_Saml_IdStoreService.php')), $e), new \LightSaml\SymfonyBridgeBundle\Bridge\Container\ProviderContainer(new \LightSaml\Provider\Attribute\FixedAttributeValueProvider(), new \LightSaml\Provider\Session\FixedSessionInfoProvider(), new \LightSaml\Provider\NameID\FixedNameIdProvider()), new \LightSaml\SymfonyBridgeBundle\Bridge\Container\CredentialContainer(($this->privates['lightsaml.credential.credential_store'] ?? $this->load('getLightsaml_Credential_CredentialStoreService.php'))), new \LightSaml\SymfonyBridgeBundle\Bridge\Container\ServiceContainer(new \LightSaml\Validator\Model\Assertion\AssertionValidator($f, new \LightSaml\Validator\Model\Subject\SubjectValidator($f), new \LightSaml\Validator\Model\Statement\StatementValidator()), new \LightSaml\Validator\Model\Assertion\AssertionTimeValidator(), new \LightSaml\Resolver\Signature\OwnSignatureResolver($g), $h, $f, new \LightSaml\Binding\BindingFactory($c), new \LightSaml\Validator\Model\Signature\SignatureValidator($g), $g, new \LightSaml\Resolver\Session\SessionProcessor($e, $b)), new \LightSaml\SymfonyBridgeBundle\Bridge\Container\OwnContainer(\LightSaml\SymfonyBridgeBundle\Factory\OwnEntityDescriptorProviderFactory::build($this->getEnv('MAUTIC_SAML_ENTITY_ID'), ($this->services['router'] ?? $this->getRouterService()), 'lightsaml_sp.login_check', NULL, $i), $i, $this->getEnv('MAUTIC_SAML_ENTITY_ID')));
