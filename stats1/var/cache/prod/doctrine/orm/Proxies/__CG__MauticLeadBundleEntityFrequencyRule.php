<?php

namespace Proxies\__CG__\Mautic\LeadBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class FrequencyRule extends \Mautic\LeadBundle\Entity\FrequencyRule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'id', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'lead', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'dateAdded', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'frequencyNumber', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'frequencyTime', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'channel', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'preferredChannel', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'pauseFromDate', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'pauseToDate', 'changes', 'pastChanges'];
        }

        return ['__isInitialized__', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'id', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'lead', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'dateAdded', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'frequencyNumber', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'frequencyTime', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'channel', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'preferredChannel', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'pauseFromDate', '' . "\0" . 'Mautic\\LeadBundle\\Entity\\FrequencyRule' . "\0" . 'pauseToDate', 'changes', 'pastChanges'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (FrequencyRule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLead', []);

        return parent::getLead();
    }

    /**
     * {@inheritDoc}
     */
    public function setLead($lead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLead', [$lead]);

        return parent::setLead($lead);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdded', []);

        return parent::getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdded($dateAdded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdded', [$dateAdded]);

        return parent::setDateAdded($dateAdded);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequencyNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequencyNumber', []);

        return parent::getFrequencyNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrequencyNumber($frequencyNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrequencyNumber', [$frequencyNumber]);

        return parent::setFrequencyNumber($frequencyNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequencyTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequencyTime', []);

        return parent::getFrequencyTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrequencyTime($frequencyTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrequencyTime', [$frequencyTime]);

        return parent::setFrequencyTime($frequencyTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel($channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$channel]);

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function isPreferredChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPreferredChannel', []);

        return parent::isPreferredChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferredChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferredChannel', []);

        return parent::getPreferredChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreferredChannel($preferredChannel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreferredChannel', [$preferredChannel]);

        return parent::setPreferredChannel($preferredChannel);
    }

    /**
     * {@inheritDoc}
     */
    public function getPauseFromDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPauseFromDate', []);

        return parent::getPauseFromDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPauseFromDate(\DateTime $pauseFromDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPauseFromDate', [$pauseFromDate]);

        return parent::setPauseFromDate($pauseFromDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPauseToDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPauseToDate', []);

        return parent::getPauseToDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPauseToDate(\DateTime $pauseToDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPauseToDate', [$pauseToDate]);

        return parent::setPauseToDate($pauseToDate);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($name, $arguments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$name, $arguments]);

        return parent::__call($name, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getChanges($includePast = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanges', [$includePast]);

        return parent::getChanges($includePast);
    }

    /**
     * {@inheritDoc}
     */
    public function resetChanges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetChanges', []);

        return parent::resetChanges();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanges(array $changes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanges', [$changes]);

        return parent::setChanges($changes);
    }

}
