<?php

namespace Proxies\__CG__\MauticPlugin\MauticSocialBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TweetStat extends \MauticPlugin\MauticSocialBundle\Entity\TweetStat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'id', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'twitterTweetId', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'tweet', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'lead', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'handle', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'dateSent', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'isFailed', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'retryCount', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'source', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'sourceId', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'favoriteCount', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'retweetCount', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'responseDetails'];
        }

        return ['__isInitialized__', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'id', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'twitterTweetId', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'tweet', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'lead', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'handle', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'dateSent', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'isFailed', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'retryCount', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'source', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'sourceId', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'favoriteCount', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'retweetCount', '' . "\0" . 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat' . "\0" . 'responseDetails'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TweetStat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterTweetId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterTweetId', []);

        return parent::getTwitterTweetId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterTweetId($twitterTweetId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterTweetId', [$twitterTweetId]);

        return parent::setTwitterTweetId($twitterTweetId);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateSent', []);

        return parent::getDateSent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateSent($dateSent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateSent', [$dateSent]);

        return parent::setDateSent($dateSent);
    }

    /**
     * {@inheritDoc}
     */
    public function getTweet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTweet', []);

        return parent::getTweet();
    }

    /**
     * {@inheritDoc}
     */
    public function setTweet(\MauticPlugin\MauticSocialBundle\Entity\Tweet $tweet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTweet', [$tweet]);

        return parent::setTweet($tweet);
    }

    /**
     * {@inheritDoc}
     */
    public function getLead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLead', []);

        return parent::getLead();
    }

    /**
     * {@inheritDoc}
     */
    public function setLead(\Mautic\LeadBundle\Entity\Lead $lead = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLead', [$lead]);

        return parent::setLead($lead);
    }

    /**
     * {@inheritDoc}
     */
    public function getRetryCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRetryCount', []);

        return parent::getRetryCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setRetryCount($retryCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRetryCount', [$retryCount]);

        return parent::setRetryCount($retryCount);
    }

    /**
     * {@inheritDoc}
     */
    public function retryCountUp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'retryCountUp', []);

        return parent::retryCountUp();
    }

    /**
     * {@inheritDoc}
     */
    public function getFavoriteCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFavoriteCount', []);

        return parent::getFavoriteCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setFavoriteCount($favoriteCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFavoriteCount', [$favoriteCount]);

        return parent::setFavoriteCount($favoriteCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getRetweetCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRetweetCount', []);

        return parent::getRetweetCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setRetweetCount($retweetCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRetweetCount', [$retweetCount]);

        return parent::setRetweetCount($retweetCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsFailed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsFailed', []);

        return parent::getIsFailed();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsFailed($isFailed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsFailed', [$isFailed]);

        return parent::setIsFailed($isFailed);
    }

    /**
     * {@inheritDoc}
     */
    public function isFailed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFailed', []);

        return parent::isFailed();
    }

    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setHandle($handle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHandle', [$handle]);

        return parent::setHandle($handle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceId', []);

        return parent::getSourceId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourceId($sourceId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourceId', [$sourceId]);

        return parent::setSourceId($sourceId);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponseDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponseDetails', []);

        return parent::getResponseDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponseDetails($responseDetails)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponseDetails', [$responseDetails]);

        return parent::setResponseDetails($responseDetails);
    }

}
