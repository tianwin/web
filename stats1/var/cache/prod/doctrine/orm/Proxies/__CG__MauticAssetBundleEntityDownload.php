<?php

namespace Proxies\__CG__\Mautic\AssetBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Download extends \Mautic\AssetBundle\Entity\Download implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'id', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'dateDownload', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'asset', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'ipAddress', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'lead', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'code', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'referer', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'trackingId', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'source', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'sourceId', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'email'];
        }

        return ['__isInitialized__', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'id', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'dateDownload', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'asset', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'ipAddress', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'lead', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'code', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'referer', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'trackingId', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'source', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'sourceId', '' . "\0" . 'Mautic\\AssetBundle\\Entity\\Download' . "\0" . 'email'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Download $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDownload($dateDownload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDownload', [$dateDownload]);

        return parent::setDateDownload($dateDownload);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDownload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDownload', []);

        return parent::getDateDownload();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferer($referer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferer', [$referer]);

        return parent::setReferer($referer);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferer', []);

        return parent::getReferer();
    }

    /**
     * {@inheritDoc}
     */
    public function setAsset(\Mautic\AssetBundle\Entity\Asset $asset = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAsset', [$asset]);

        return parent::setAsset($asset);
    }

    /**
     * {@inheritDoc}
     */
    public function getAsset()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAsset', []);

        return parent::getAsset();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpAddress(\Mautic\CoreBundle\Entity\IpAddress $ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpAddress', [$ipAddress]);

        return parent::setIpAddress($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddress', []);

        return parent::getIpAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrackingId($trackingId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrackingId', [$trackingId]);

        return parent::setTrackingId($trackingId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingId', []);

        return parent::getTrackingId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLead', []);

        return parent::getLead();
    }

    /**
     * {@inheritDoc}
     */
    public function setLead($lead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLead', [$lead]);

        return parent::setLead($lead);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceId', []);

        return parent::getSourceId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourceId($sourceId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourceId', [$sourceId]);

        return parent::setSourceId($sourceId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(\Mautic\EmailBundle\Entity\Email $email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

}
